services:
  accounts_db:
    container_name: accounts_db
    image: postgres:13
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: postgres
    ports:
      - 5432:5432
    volumes:
      - pgdata:/var/lib/postgresql/data
    healthcheck:
      test: "exit 0"

  chat_db:
    container_name: chat_db
    image: mongo:latest
    environment:
      MONGO_INITDB_ROOT_USERNAME: mongo
      MONGO_INITDB_ROOT_PASSWORD: mongo
    ports:
      - 27017:27017
    volumes:
      - mongo-data:/var/lib/mongodb/data

  accounts_backend:
    container_name: accounts_backend
    image: go_accounts_backend:1.0.0
    build:
      context: ./accounts-backend
      dockerfile: go.dockerfile
    environment:
      DATABASE_URL: 'postgres://postgres:postgres@accounts_db:5432/postgres?sslmode=disable'
      GOOGLE_CLIENT_ID: ${GOOGLE_CLIENT_ID}
      GOOGLE_CLIENT_SECRET: ${GOOGLE_CLIENT_SECRET}
    ports:
      - '8000:8000'
    depends_on:
      accounts_db:
        condition: service_healthy

  chat_backend:
    container_name: chat_backend
    image: go_chat_backend:1.0.0
    build:
      context: ./chat-backend
      dockerfile: go.dockerfile
    environment:
      DATABASE_URL: 'mongodb://mongo:mongo@chat_db:27017'
    ports:
      - '8002:8002'
    depends_on:
      - chat_db

  ws_server:
    container_name: ws_server
    image: go_ws:1.0.0
    build:
      context: ./ws-server
      dockerfile: go.dockerfile
    ports:
      - '8001:8001'

  client_frontend:
    container_name: client_frontend
    image: express_client_frondend:1.0.0
    build:
      context: ./client-frontend
      dockerfile: node.dockerfile
    environment:
      GOOGLE_CLIENT_ID: ${GOOGLE_CLIENT_ID}
      GOOGLE_CLIENT_SECRET: ${GOOGLE_CLIENT_SECRET}
    ports:
      - '3000:3000'

volumes:
  pgdata: {}
  mongo-data: {}
